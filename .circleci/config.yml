version: 2.1

# 2.1 requires a parameters section and so a mandatory default value for each parameter based on its type. Triggering a pipeline with parameters whose values mismatch in type could prevent pipelines jobs from starting, and the propagation of non-string default values for unspecified parameters could influence the outcome of build jobs as validation for parameter values is not included in the build code of the project. Also, it certainly does not help that the parameters section must be declared within the global scope of .circleci/config.yml.
# For consistency across all CI platforms, all parameters will be of string type with default values being empty strings. This way, parameters are treated more like environment variables, consistent across CI environments where jobs are mostly run within shell / container environments.
parameters:
  GAME_VERSION:
    type: string
    default: ''
  APPID:
    type: string
    default: ''
  CLIENT_APPID:
    type: string
    default: ''
  GAME:
    type: string
    default: ''
  MOD:
    type: string
    default: ''
  FIX_APPMANIFEST:
    type: string
    default: ''
  GAME_UPDATE_COUNT:
    type: string
    default: ''
  LATEST:
    type: string
    default: ''
  CACHE:
    type: string
    default: ''
  NO_TEST:
    type: string
    default: ''
  NO_PUSH:
    type: string
    default: ''
  STEAM_LOGIN:
    type: string
    default: ''

workflows:
  version: 2
  ci:
    when: << pipeline.parameters.APPID >>       # Push builds can be disabled by enabling 'Only build pull requests' via project settings
    jobs:
    - build-image

jobs:
  build-image:
    machine:
      image: ubuntu-2004:2022.07.1
      docker_layer_caching: false
    environment:
      GAME_VERSION: << pipeline.parameters.GAME_VERSION >>
      APPID: << pipeline.parameters.APPID >>
      CLIENT_APPID: << pipeline.parameters.CLIENT_APPID >>
      GAME: << pipeline.parameters.GAME >>
      MOD: << pipeline.parameters.MOD >>
      FIX_APPMANIFEST: << pipeline.parameters.FIX_APPMANIFEST >>
      GAME_UPDATE_COUNT: << pipeline.parameters.GAME_UPDATE_COUNT >>
      LATEST: << pipeline.parameters.LATEST >>
      CACHE: << pipeline.parameters.CACHE >>
      NO_TEST: << pipeline.parameters.NO_TEST >>
      NO_PUSH: << pipeline.parameters.NO_PUSH >>
      STEAM_LOGIN: << pipeline.parameters.STEAM_LOGIN >>
    steps:
    - checkout
    - run:
        name: Build, test, push image
        no_output_timeout: 40m
        command: |
          export PIPELINE="$CIRCLE_BRANCH"
          ./build.sh && echo 'success' > .build-status || ( echo 'failed' > .build-status && exit 1 )
    - run:
        name: Send notification
        when: always
        command: |
          export BUILD_STATUS=$( cat .build-status )
          export CI_JOB_ID="$CIRCLE_BUILD_NUM"
          export CI_PROJECT_NAMESPACE="$CIRCLE_PROJECT_USERNAME"
          export CI_PROJECT_NAME="$CIRCLE_PROJECT_REPONAME"
          export CI_COMMIT_BRANCH="$CIRCLE_BRANCH"
          export X_CI_WEBHOOK_SECRET_HEADER="x-circleci-webhook-secret: $X_CIRCLECI_WEBHOOK_SECRET"
          ./notify.sh
